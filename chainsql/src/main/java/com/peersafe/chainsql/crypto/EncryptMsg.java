// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MultiEncrypt.proto
package com.peersafe.chainsql.crypto;
public final class EncryptMsg {
  private EncryptMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MultiEncryptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MultiEncrypt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    java.util.List<EncryptMsg.MultiEncrypt.HashToken> 
        getHashTokenPairList();
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    EncryptMsg.MultiEncrypt.HashToken getHashTokenPair(int index);
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    int getHashTokenPairCount();
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    java.util.List<? extends EncryptMsg.MultiEncrypt.HashTokenOrBuilder> 
        getHashTokenPairOrBuilderList();
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    EncryptMsg.MultiEncrypt.HashTokenOrBuilder getHashTokenPairOrBuilder(
        int index);

    /**
     * <pre>
     *字符串的密文
     * </pre>
     *
     * <code>required bytes cipher = 2;</code>
     */
    boolean hasCipher();
    /**
     * <pre>
     *字符串的密文
     * </pre>
     *
     * <code>required bytes cipher = 2;</code>
     */
    com.google.protobuf.ByteString getCipher();
  }
  /**
   * Protobuf type {@code MultiEncrypt}
   */
  public  static final class MultiEncrypt extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MultiEncrypt)
      MultiEncryptOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiEncrypt.newBuilder() to construct.
    private MultiEncrypt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiEncrypt() {
      hashTokenPair_ = java.util.Collections.emptyList();
      cipher_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiEncrypt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hashTokenPair_ = new java.util.ArrayList<EncryptMsg.MultiEncrypt.HashToken>();
                mutable_bitField0_ |= 0x00000001;
              }
              hashTokenPair_.add(
                  input.readMessage(EncryptMsg.MultiEncrypt.HashToken.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              cipher_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hashTokenPair_ = java.util.Collections.unmodifiableList(hashTokenPair_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EncryptMsg.internal_static_MultiEncrypt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EncryptMsg.internal_static_MultiEncrypt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EncryptMsg.MultiEncrypt.class, EncryptMsg.MultiEncrypt.Builder.class);
    }

    public interface HashTokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MultiEncrypt.HashToken)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bytes public_hash = 1;</code>
       */
      boolean hasPublicHash();
      /**
       * <code>required bytes public_hash = 1;</code>
       */
      com.google.protobuf.ByteString getPublicHash();

      /**
       * <code>required bytes token = 2;</code>
       */
      boolean hasToken();
      /**
       * <code>required bytes token = 2;</code>
       */
      com.google.protobuf.ByteString getToken();
    }
    /**
     * Protobuf type {@code MultiEncrypt.HashToken}
     */
    public  static final class HashToken extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:MultiEncrypt.HashToken)
        HashTokenOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HashToken.newBuilder() to construct.
      private HashToken(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HashToken() {
        publicHash_ = com.google.protobuf.ByteString.EMPTY;
        token_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HashToken(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                publicHash_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                token_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EncryptMsg.internal_static_MultiEncrypt_HashToken_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EncryptMsg.internal_static_MultiEncrypt_HashToken_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EncryptMsg.MultiEncrypt.HashToken.class, EncryptMsg.MultiEncrypt.HashToken.Builder.class);
      }

      private int bitField0_;
      public static final int PUBLIC_HASH_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString publicHash_;
      /**
       * <code>required bytes public_hash = 1;</code>
       */
      public boolean hasPublicHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes public_hash = 1;</code>
       */
      public com.google.protobuf.ByteString getPublicHash() {
        return publicHash_;
      }

      public static final int TOKEN_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString token_;
      /**
       * <code>required bytes token = 2;</code>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes token = 2;</code>
       */
      public com.google.protobuf.ByteString getToken() {
        return token_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasPublicHash()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasToken()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, publicHash_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, token_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, publicHash_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, token_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EncryptMsg.MultiEncrypt.HashToken)) {
          return super.equals(obj);
        }
        EncryptMsg.MultiEncrypt.HashToken other = (EncryptMsg.MultiEncrypt.HashToken) obj;

        boolean result = true;
        result = result && (hasPublicHash() == other.hasPublicHash());
        if (hasPublicHash()) {
          result = result && getPublicHash()
              .equals(other.getPublicHash());
        }
        result = result && (hasToken() == other.hasToken());
        if (hasToken()) {
          result = result && getToken()
              .equals(other.getToken());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPublicHash()) {
          hash = (37 * hash) + PUBLIC_HASH_FIELD_NUMBER;
          hash = (53 * hash) + getPublicHash().hashCode();
        }
        if (hasToken()) {
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + getToken().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EncryptMsg.MultiEncrypt.HashToken parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EncryptMsg.MultiEncrypt.HashToken prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code MultiEncrypt.HashToken}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:MultiEncrypt.HashToken)
          EncryptMsg.MultiEncrypt.HashTokenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EncryptMsg.internal_static_MultiEncrypt_HashToken_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EncryptMsg.internal_static_MultiEncrypt_HashToken_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EncryptMsg.MultiEncrypt.HashToken.class, EncryptMsg.MultiEncrypt.HashToken.Builder.class);
        }

        // Construct using EncryptMsg.MultiEncrypt.HashToken.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          publicHash_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          token_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EncryptMsg.internal_static_MultiEncrypt_HashToken_descriptor;
        }

        public EncryptMsg.MultiEncrypt.HashToken getDefaultInstanceForType() {
          return EncryptMsg.MultiEncrypt.HashToken.getDefaultInstance();
        }

        public EncryptMsg.MultiEncrypt.HashToken build() {
          EncryptMsg.MultiEncrypt.HashToken result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public EncryptMsg.MultiEncrypt.HashToken buildPartial() {
          EncryptMsg.MultiEncrypt.HashToken result = new EncryptMsg.MultiEncrypt.HashToken(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.publicHash_ = publicHash_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.token_ = token_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EncryptMsg.MultiEncrypt.HashToken) {
            return mergeFrom((EncryptMsg.MultiEncrypt.HashToken)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EncryptMsg.MultiEncrypt.HashToken other) {
          if (other == EncryptMsg.MultiEncrypt.HashToken.getDefaultInstance()) return this;
          if (other.hasPublicHash()) {
            setPublicHash(other.getPublicHash());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasPublicHash()) {
            return false;
          }
          if (!hasToken()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EncryptMsg.MultiEncrypt.HashToken parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EncryptMsg.MultiEncrypt.HashToken) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString publicHash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes public_hash = 1;</code>
         */
        public boolean hasPublicHash() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required bytes public_hash = 1;</code>
         */
        public com.google.protobuf.ByteString getPublicHash() {
          return publicHash_;
        }
        /**
         * <code>required bytes public_hash = 1;</code>
         */
        public Builder setPublicHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          publicHash_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes public_hash = 1;</code>
         */
        public Builder clearPublicHash() {
          bitField0_ = (bitField0_ & ~0x00000001);
          publicHash_ = getDefaultInstance().getPublicHash();
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString token_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes token = 2;</code>
         */
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bytes token = 2;</code>
         */
        public com.google.protobuf.ByteString getToken() {
          return token_;
        }
        /**
         * <code>required bytes token = 2;</code>
         */
        public Builder setToken(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          token_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes token = 2;</code>
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = getDefaultInstance().getToken();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:MultiEncrypt.HashToken)
      }

      // @@protoc_insertion_point(class_scope:MultiEncrypt.HashToken)
      private static final EncryptMsg.MultiEncrypt.HashToken DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EncryptMsg.MultiEncrypt.HashToken();
      }

      public static EncryptMsg.MultiEncrypt.HashToken getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<HashToken>
          PARSER = new com.google.protobuf.AbstractParser<HashToken>() {
        public HashToken parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HashToken(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HashToken> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HashToken> getParserForType() {
        return PARSER;
      }

      public EncryptMsg.MultiEncrypt.HashToken getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int HASH_TOKEN_PAIR_FIELD_NUMBER = 1;
    private java.util.List<EncryptMsg.MultiEncrypt.HashToken> hashTokenPair_;
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    public java.util.List<EncryptMsg.MultiEncrypt.HashToken> getHashTokenPairList() {
      return hashTokenPair_;
    }
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    public java.util.List<? extends EncryptMsg.MultiEncrypt.HashTokenOrBuilder> 
        getHashTokenPairOrBuilderList() {
      return hashTokenPair_;
    }
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    public int getHashTokenPairCount() {
      return hashTokenPair_.size();
    }
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    public EncryptMsg.MultiEncrypt.HashToken getHashTokenPair(int index) {
      return hashTokenPair_.get(index);
    }
    /**
     * <pre>
     *公钥哈希与Token数组
     * </pre>
     *
     * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
     */
    public EncryptMsg.MultiEncrypt.HashTokenOrBuilder getHashTokenPairOrBuilder(
        int index) {
      return hashTokenPair_.get(index);
    }

    public static final int CIPHER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString cipher_;
    /**
     * <pre>
     *字符串的密文
     * </pre>
     *
     * <code>required bytes cipher = 2;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *字符串的密文
     * </pre>
     *
     * <code>required bytes cipher = 2;</code>
     */
    public com.google.protobuf.ByteString getCipher() {
      return cipher_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCipher()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHashTokenPairCount(); i++) {
        if (!getHashTokenPair(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hashTokenPair_.size(); i++) {
        output.writeMessage(1, hashTokenPair_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, cipher_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hashTokenPair_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hashTokenPair_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, cipher_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EncryptMsg.MultiEncrypt)) {
        return super.equals(obj);
      }
      EncryptMsg.MultiEncrypt other = (EncryptMsg.MultiEncrypt) obj;

      boolean result = true;
      result = result && getHashTokenPairList()
          .equals(other.getHashTokenPairList());
      result = result && (hasCipher() == other.hasCipher());
      if (hasCipher()) {
        result = result && getCipher()
            .equals(other.getCipher());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHashTokenPairCount() > 0) {
        hash = (37 * hash) + HASH_TOKEN_PAIR_FIELD_NUMBER;
        hash = (53 * hash) + getHashTokenPairList().hashCode();
      }
      if (hasCipher()) {
        hash = (37 * hash) + CIPHER_FIELD_NUMBER;
        hash = (53 * hash) + getCipher().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EncryptMsg.MultiEncrypt parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptMsg.MultiEncrypt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EncryptMsg.MultiEncrypt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptMsg.MultiEncrypt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EncryptMsg.MultiEncrypt prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MultiEncrypt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MultiEncrypt)
        EncryptMsg.MultiEncryptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EncryptMsg.internal_static_MultiEncrypt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EncryptMsg.internal_static_MultiEncrypt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EncryptMsg.MultiEncrypt.class, EncryptMsg.MultiEncrypt.Builder.class);
      }

      // Construct using EncryptMsg.MultiEncrypt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHashTokenPairFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (hashTokenPairBuilder_ == null) {
          hashTokenPair_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hashTokenPairBuilder_.clear();
        }
        cipher_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EncryptMsg.internal_static_MultiEncrypt_descriptor;
      }

      public EncryptMsg.MultiEncrypt getDefaultInstanceForType() {
        return EncryptMsg.MultiEncrypt.getDefaultInstance();
      }

      public EncryptMsg.MultiEncrypt build() {
        EncryptMsg.MultiEncrypt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public EncryptMsg.MultiEncrypt buildPartial() {
        EncryptMsg.MultiEncrypt result = new EncryptMsg.MultiEncrypt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (hashTokenPairBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            hashTokenPair_ = java.util.Collections.unmodifiableList(hashTokenPair_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hashTokenPair_ = hashTokenPair_;
        } else {
          result.hashTokenPair_ = hashTokenPairBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cipher_ = cipher_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EncryptMsg.MultiEncrypt) {
          return mergeFrom((EncryptMsg.MultiEncrypt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EncryptMsg.MultiEncrypt other) {
        if (other == EncryptMsg.MultiEncrypt.getDefaultInstance()) return this;
        if (hashTokenPairBuilder_ == null) {
          if (!other.hashTokenPair_.isEmpty()) {
            if (hashTokenPair_.isEmpty()) {
              hashTokenPair_ = other.hashTokenPair_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHashTokenPairIsMutable();
              hashTokenPair_.addAll(other.hashTokenPair_);
            }
            onChanged();
          }
        } else {
          if (!other.hashTokenPair_.isEmpty()) {
            if (hashTokenPairBuilder_.isEmpty()) {
              hashTokenPairBuilder_.dispose();
              hashTokenPairBuilder_ = null;
              hashTokenPair_ = other.hashTokenPair_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hashTokenPairBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHashTokenPairFieldBuilder() : null;
            } else {
              hashTokenPairBuilder_.addAllMessages(other.hashTokenPair_);
            }
          }
        }
        if (other.hasCipher()) {
          setCipher(other.getCipher());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCipher()) {
          return false;
        }
        for (int i = 0; i < getHashTokenPairCount(); i++) {
          if (!getHashTokenPair(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EncryptMsg.MultiEncrypt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EncryptMsg.MultiEncrypt) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EncryptMsg.MultiEncrypt.HashToken> hashTokenPair_ =
        java.util.Collections.emptyList();
      private void ensureHashTokenPairIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hashTokenPair_ = new java.util.ArrayList<EncryptMsg.MultiEncrypt.HashToken>(hashTokenPair_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EncryptMsg.MultiEncrypt.HashToken, EncryptMsg.MultiEncrypt.HashToken.Builder, EncryptMsg.MultiEncrypt.HashTokenOrBuilder> hashTokenPairBuilder_;

      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public java.util.List<EncryptMsg.MultiEncrypt.HashToken> getHashTokenPairList() {
        if (hashTokenPairBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hashTokenPair_);
        } else {
          return hashTokenPairBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public int getHashTokenPairCount() {
        if (hashTokenPairBuilder_ == null) {
          return hashTokenPair_.size();
        } else {
          return hashTokenPairBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public EncryptMsg.MultiEncrypt.HashToken getHashTokenPair(int index) {
        if (hashTokenPairBuilder_ == null) {
          return hashTokenPair_.get(index);
        } else {
          return hashTokenPairBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder setHashTokenPair(
          int index, EncryptMsg.MultiEncrypt.HashToken value) {
        if (hashTokenPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHashTokenPairIsMutable();
          hashTokenPair_.set(index, value);
          onChanged();
        } else {
          hashTokenPairBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder setHashTokenPair(
          int index, EncryptMsg.MultiEncrypt.HashToken.Builder builderForValue) {
        if (hashTokenPairBuilder_ == null) {
          ensureHashTokenPairIsMutable();
          hashTokenPair_.set(index, builderForValue.build());
          onChanged();
        } else {
          hashTokenPairBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder addHashTokenPair(EncryptMsg.MultiEncrypt.HashToken value) {
        if (hashTokenPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHashTokenPairIsMutable();
          hashTokenPair_.add(value);
          onChanged();
        } else {
          hashTokenPairBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder addHashTokenPair(
          int index, EncryptMsg.MultiEncrypt.HashToken value) {
        if (hashTokenPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHashTokenPairIsMutable();
          hashTokenPair_.add(index, value);
          onChanged();
        } else {
          hashTokenPairBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder addHashTokenPair(
          EncryptMsg.MultiEncrypt.HashToken.Builder builderForValue) {
        if (hashTokenPairBuilder_ == null) {
          ensureHashTokenPairIsMutable();
          hashTokenPair_.add(builderForValue.build());
          onChanged();
        } else {
          hashTokenPairBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder addHashTokenPair(
          int index, EncryptMsg.MultiEncrypt.HashToken.Builder builderForValue) {
        if (hashTokenPairBuilder_ == null) {
          ensureHashTokenPairIsMutable();
          hashTokenPair_.add(index, builderForValue.build());
          onChanged();
        } else {
          hashTokenPairBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder addAllHashTokenPair(
          java.lang.Iterable<? extends EncryptMsg.MultiEncrypt.HashToken> values) {
        if (hashTokenPairBuilder_ == null) {
          ensureHashTokenPairIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hashTokenPair_);
          onChanged();
        } else {
          hashTokenPairBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder clearHashTokenPair() {
        if (hashTokenPairBuilder_ == null) {
          hashTokenPair_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hashTokenPairBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public Builder removeHashTokenPair(int index) {
        if (hashTokenPairBuilder_ == null) {
          ensureHashTokenPairIsMutable();
          hashTokenPair_.remove(index);
          onChanged();
        } else {
          hashTokenPairBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public EncryptMsg.MultiEncrypt.HashToken.Builder getHashTokenPairBuilder(
          int index) {
        return getHashTokenPairFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public EncryptMsg.MultiEncrypt.HashTokenOrBuilder getHashTokenPairOrBuilder(
          int index) {
        if (hashTokenPairBuilder_ == null) {
          return hashTokenPair_.get(index);  } else {
          return hashTokenPairBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public java.util.List<? extends EncryptMsg.MultiEncrypt.HashTokenOrBuilder> 
           getHashTokenPairOrBuilderList() {
        if (hashTokenPairBuilder_ != null) {
          return hashTokenPairBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hashTokenPair_);
        }
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public EncryptMsg.MultiEncrypt.HashToken.Builder addHashTokenPairBuilder() {
        return getHashTokenPairFieldBuilder().addBuilder(
            EncryptMsg.MultiEncrypt.HashToken.getDefaultInstance());
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public EncryptMsg.MultiEncrypt.HashToken.Builder addHashTokenPairBuilder(
          int index) {
        return getHashTokenPairFieldBuilder().addBuilder(
            index, EncryptMsg.MultiEncrypt.HashToken.getDefaultInstance());
      }
      /**
       * <pre>
       *公钥哈希与Token数组
       * </pre>
       *
       * <code>repeated .MultiEncrypt.HashToken hash_token_pair = 1;</code>
       */
      public java.util.List<EncryptMsg.MultiEncrypt.HashToken.Builder> 
           getHashTokenPairBuilderList() {
        return getHashTokenPairFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EncryptMsg.MultiEncrypt.HashToken, EncryptMsg.MultiEncrypt.HashToken.Builder, EncryptMsg.MultiEncrypt.HashTokenOrBuilder> 
          getHashTokenPairFieldBuilder() {
        if (hashTokenPairBuilder_ == null) {
          hashTokenPairBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EncryptMsg.MultiEncrypt.HashToken, EncryptMsg.MultiEncrypt.HashToken.Builder, EncryptMsg.MultiEncrypt.HashTokenOrBuilder>(
                  hashTokenPair_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          hashTokenPair_ = null;
        }
        return hashTokenPairBuilder_;
      }

      private com.google.protobuf.ByteString cipher_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *字符串的密文
       * </pre>
       *
       * <code>required bytes cipher = 2;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *字符串的密文
       * </pre>
       *
       * <code>required bytes cipher = 2;</code>
       */
      public com.google.protobuf.ByteString getCipher() {
        return cipher_;
      }
      /**
       * <pre>
       *字符串的密文
       * </pre>
       *
       * <code>required bytes cipher = 2;</code>
       */
      public Builder setCipher(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cipher_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *字符串的密文
       * </pre>
       *
       * <code>required bytes cipher = 2;</code>
       */
      public Builder clearCipher() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cipher_ = getDefaultInstance().getCipher();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MultiEncrypt)
    }

    // @@protoc_insertion_point(class_scope:MultiEncrypt)
    private static final EncryptMsg.MultiEncrypt DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EncryptMsg.MultiEncrypt();
    }

    public static EncryptMsg.MultiEncrypt getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MultiEncrypt>
        PARSER = new com.google.protobuf.AbstractParser<MultiEncrypt>() {
      public MultiEncrypt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiEncrypt(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiEncrypt> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiEncrypt> getParserForType() {
      return PARSER;
    }

    public EncryptMsg.MultiEncrypt getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MultiEncrypt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MultiEncrypt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MultiEncrypt_HashToken_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MultiEncrypt_HashToken_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022MultiEncrypt.proto\"\201\001\n\014MultiEncrypt\0220\n" +
      "\017hash_token_pair\030\001 \003(\0132\027.MultiEncrypt.Ha" +
      "shToken\022\016\n\006cipher\030\002 \002(\014\032/\n\tHashToken\022\023\n\013" +
      "public_hash\030\001 \002(\014\022\r\n\005token\030\002 \002(\014B\014B\nEncr" +
      "yptMsg"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MultiEncrypt_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MultiEncrypt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MultiEncrypt_descriptor,
        new java.lang.String[] { "HashTokenPair", "Cipher", });
    internal_static_MultiEncrypt_HashToken_descriptor =
      internal_static_MultiEncrypt_descriptor.getNestedTypes().get(0);
    internal_static_MultiEncrypt_HashToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MultiEncrypt_HashToken_descriptor,
        new java.lang.String[] { "PublicHash", "Token", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
