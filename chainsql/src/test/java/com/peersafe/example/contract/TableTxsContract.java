package com.peersafe.example.contract;

import com.peersafe.abi.TypeReference;
import com.peersafe.abi.datatypes.Function;
import com.peersafe.abi.datatypes.Type;
import com.peersafe.abi.datatypes.Utf8String;
import com.peersafe.abi.datatypes.generated.Uint256;
import com.peersafe.chainsql.contract.Contract;
import com.peersafe.chainsql.contract.RemoteCall;
import com.peersafe.chainsql.contract.TransactionReceipt;
import com.peersafe.chainsql.core.Chainsql;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the com.peersafe.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.4.0.
 */
public class TableTxsContract extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_CREATE = "create";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_GETVALUEBYKEY = "getValueByKey";

    public static final String FUNC_GET = "get";

    public static final String FUNC_DROP = "drop";

    public static final String FUNC_GRANT = "grant";

    public static final String FUNC_SQLTRANSACTION = "sqlTransaction";

    public static final String FUNC_RENAME = "rename";

    public static final String FUNC_GETROWSIZE = "getRowSize";

    public static final String FUNC_GETVALUEBYINDEX = "getValueByIndex";

    public static final String FUNC_GETCOLSIZE = "getColSize";

    public static final String FUNC_DELETEX = "deletex";

    protected TableTxsContract(Chainsql chainsql, String contractAddress, BigInteger gasLimit) {
        super(chainsql,BINARY, contractAddress, gasLimit);
    }

    public RemoteCall<TransactionReceipt> insert(String tableName, String raw) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(raw)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> create(String tableName, String raw) {
        final Function function = new Function(
                FUNC_CREATE, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(raw)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> update(String tableName, String rawUpdate, String rawGet) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(rawUpdate), 
                new com.peersafe.abi.datatypes.Utf8String(rawGet)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getValueByKey(BigInteger handle, BigInteger row, String key) {
        final Function function = new Function(FUNC_GETVALUEBYKEY, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.generated.Uint256(handle), 
                new com.peersafe.abi.datatypes.generated.Uint256(row), 
                new com.peersafe.abi.datatypes.Utf8String(key)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> get(String tableName, String raw) {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(raw)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> drop(String tableName) {
        final Function function = new Function(
                FUNC_DROP, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> grant(String toWho, String tableName, String raw) {
        final Function function = new Function(
                FUNC_GRANT, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Address(toWho), 
                new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(raw)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> sqlTransaction(String tableName) {
        final Function function = new Function(
                FUNC_SQLTRANSACTION, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> rename(String tableName, String tableNameNew) {
        final Function function = new Function(
                FUNC_RENAME, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(tableNameNew)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getRowSize(BigInteger handle) {
        final Function function = new Function(FUNC_GETROWSIZE, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.generated.Uint256(handle)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getValueByIndex(BigInteger handle, BigInteger row, BigInteger col) {
        final Function function = new Function(FUNC_GETVALUEBYINDEX, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.generated.Uint256(handle), 
                new com.peersafe.abi.datatypes.generated.Uint256(row), 
                new com.peersafe.abi.datatypes.generated.Uint256(col)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getColSize(BigInteger handle) {
        final Function function = new Function(FUNC_GETCOLSIZE, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.generated.Uint256(handle)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> deletex(String tableName, String raw) {
        final Function function = new Function(
                FUNC_DELETEX, 
                Arrays.<Type>asList(new com.peersafe.abi.datatypes.Utf8String(tableName), 
                new com.peersafe.abi.datatypes.Utf8String(raw)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<TableTxsContract> deploy(Chainsql chainsql, BigInteger gasLimit) {
        return deployRemoteCall(TableTxsContract.class, chainsql, gasLimit, BINARY, "");
    }

    public static TableTxsContract load(Chainsql chainsql, String contractAddress, BigInteger gasLimit) {
        return new TableTxsContract(chainsql,contractAddress, gasLimit);
    }
}
